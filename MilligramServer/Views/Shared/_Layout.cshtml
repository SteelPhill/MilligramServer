<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MilligramServer</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-dark-5@1.1.3/dist/css/bootstrap-dark.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

    <script type="text/javascript">
        function formGetRedirect(event) {
            var params = new URLSearchParams();
            [...event.srcElement.elements].forEach(item => {
                if ((item.nodeName === 'INPUT' || item.nodeName === 'SELECT') && item.id === item.name &&
                    item.value !== undefined && item.value !== null && item.value !== '')
                    params.set(item.name, item.value);
            });

            const url = new URL(window.location);
            if (url.searchParams.has('SortBy'))
                params.set('SortBy', url.searchParams.get('SortBy'));

            window.location.href = event.target.action + (params.size > 0 ? '?' + params : '');
            event.preventDefault();
        }

        function changeSortBy(sortBy) {
            const url = new URL(window.location);

            url.searchParams.delete('Page');

            if (sortBy == '')
                url.searchParams.delete('SortBy');
            else
                url.searchParams.set('SortBy', sortBy);

            window.location.href = url;
        }

        function changePage(page) {
            const url = new URL(window.location);

            url.searchParams.delete('Page');
            if (page > @Constants.FirstPage)
                url.searchParams.set('Page', page);

            window.location.href = url;
        }

        function deleteConfirm(entityName, id) {
            return confirm('Удалить ' + entityName + ' (id = ' + id + ')?');
        }

        function restoreConfirm(entityName, id) {
            return confirm('Восстановить ' + entityName + ' (id = ' + id + ')?');
        }
    </script>
</head>
<body class="bg-dark text-white">
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">MilligramServer</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @if (Context.User.Identity?.IsAuthenticated == true)
                        {
                            @if (Context.User.IsInRole(RoleTokens.AdminRole))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="" asp-controller="Users" asp-action="Index">Пользователи</a>
                                </li>
                            }
                        }
                    </ul>
                    <ul class="navbar-nav flex-grow-1 justify-content-end">
                        @if (Context.User.Identity?.IsAuthenticated == true)
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Logout"><i class="fa fa-sign-out me-1"></i>Выйти [@Context.User.Identity.Name]</a>
                            </li>
                            @if (Context.User.IsInRole(RoleTokens.SwaggerRole))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" href="/swagger/index.html"><i class="fa fa-code me-1"></i>API</a>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Login"><i class="fa fa-sign-in me-1"></i>Войти</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted bg-dark">
        <div class="container">
            &copy; @DateTime.Now.Year - MilligramServer
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>